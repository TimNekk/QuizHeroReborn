version: "3"

services:
  web:
    image: "docker-spring-boot-postgres:latest"
    build:
      context: .
    env_file:
      - .env
    container_name: quiz_hero_reborn_web
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always
    networks:
      - app
    

  db:
    container_name: quiz_hero_reborn_db
    image: postgres
    ports:
      - "${DB_EXPOSE_PORT:-5432}:${DB_PORT:-5432}"
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    networks:
      - app

  redis:
    container_name: quiz_hero_reborn_redis
    image: redis
    command: redis-server --requirepass ${REDIS_PASS}
    ports:
      - "${REDIS_EXPOSE_PORT:-6379}:${REDIS_PORT:-6379}"
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASS}", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app

  # pgadmin:
  #  container_name: quiz_hero_reborn_pgadmin
  #  image: dpage/pgadmin4:7.1
  #  environment:
  #    PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
  #    PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
  #    PGADMIN_CONFIG_SERVER_MODE: "False"
  #  ports:
  #    - "${PGADMIN_EXPOSE_PORT:-5050}:${PGADMIN_PORT:-80}"
  #  depends_on:
  #    db:
  #      condition: service_healthy
  #  restart: unless-stopped
  #  networks:
  #    - app

networks:
  app:
    driver: bridge
